/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN1VIEWBASE_HPP
#define SCREEN1VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
    virtual void setupScreen();
    virtual void handleTickEvent();

    /*
     * Virtual Action Handlers
     */
    virtual void TickUpdate()
    {
        // Override and implement this function in Screen1
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box MoteurConnected1;
    touchgfx::Box MoteurConnected2;
    touchgfx::ButtonWithLabel buttonWithLabelStart1;
    touchgfx::ButtonWithLabel buttonWithLabelStop1;
    touchgfx::ButtonWithLabel buttonWithLabelStart2;
    touchgfx::ButtonWithLabel buttonWithLabelStop2;
    touchgfx::TextAreaWithOneWildcard TextStateMot1;
    touchgfx::TextAreaWithOneWildcard TextStateMot2;
    touchgfx::TextAreaWithOneWildcard textPosG1;
    touchgfx::TextAreaWithOneWildcard MaxPosG1;
    touchgfx::TextAreaWithOneWildcard textPosD1;
    touchgfx::TextAreaWithOneWildcard cmntextD2;
    touchgfx::ButtonWithLabel ResetPosD;
    touchgfx::ButtonWithLabel ResetPosG;
    touchgfx::TextAreaWithOneWildcard MinPosD1;
    touchgfx::ButtonWithLabel SetD;
    touchgfx::TextAreaWithOneWildcard MaxPosD1;
    touchgfx::ButtonWithLabel SetG;
    touchgfx::TextAreaWithOneWildcard MinPosG1;
    touchgfx::TextAreaWithOneWildcard cmntextG2;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTSTATEMOT1_SIZE = 30;
    touchgfx::Unicode::UnicodeChar TextStateMot1Buffer[TEXTSTATEMOT1_SIZE];
    static const uint16_t TEXTSTATEMOT2_SIZE = 30;
    touchgfx::Unicode::UnicodeChar TextStateMot2Buffer[TEXTSTATEMOT2_SIZE];
    static const uint16_t TEXTPOSG1_SIZE = 30;
    touchgfx::Unicode::UnicodeChar textPosG1Buffer[TEXTPOSG1_SIZE];
    static const uint16_t MAXPOSG1_SIZE = 30;
    touchgfx::Unicode::UnicodeChar MaxPosG1Buffer[MAXPOSG1_SIZE];
    static const uint16_t TEXTPOSD1_SIZE = 30;
    touchgfx::Unicode::UnicodeChar textPosD1Buffer[TEXTPOSD1_SIZE];
    static const uint16_t CMNTEXTD2_SIZE = 30;
    touchgfx::Unicode::UnicodeChar cmntextD2Buffer[CMNTEXTD2_SIZE];
    static const uint16_t MINPOSD1_SIZE = 30;
    touchgfx::Unicode::UnicodeChar MinPosD1Buffer[MINPOSD1_SIZE];
    static const uint16_t MAXPOSD1_SIZE = 30;
    touchgfx::Unicode::UnicodeChar MaxPosD1Buffer[MAXPOSD1_SIZE];
    static const uint16_t MINPOSG1_SIZE = 30;
    touchgfx::Unicode::UnicodeChar MinPosG1Buffer[MINPOSG1_SIZE];
    static const uint16_t CMNTEXTG2_SIZE = 30;
    touchgfx::Unicode::UnicodeChar cmntextG2Buffer[CMNTEXTG2_SIZE];

private:

    /*
     * Tick Counter Declarations
     */
    static const uint32_t TICK_INTERACTION1_INTERVAL = 10;
    uint32_t frameCountInteraction1Interval;

};

#endif // SCREEN1VIEWBASE_HPP
