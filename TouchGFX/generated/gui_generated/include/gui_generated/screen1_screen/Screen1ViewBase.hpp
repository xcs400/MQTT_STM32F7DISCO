/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN1VIEWBASE_HPP
#define SCREEN1VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
    virtual void setupScreen();
    virtual void handleTickEvent();

    /*
     * Virtual Action Handlers
     */
    virtual void TickUpdate()
    {
        // Override and implement this function in Screen1
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box MoteurConnected1;
    touchgfx::Box MoteurConnected2;
    touchgfx::ButtonWithLabel buttonWithLabelStart2;
    touchgfx::ButtonWithLabel buttonWithLabelStop2;
    touchgfx::ButtonWithLabel ResetPosD;
    touchgfx::TextAreaWithOneWildcard TextLog;
    touchgfx::TextAreaWithOneWildcard LocalIp;
    touchgfx::TextAreaWithOneWildcard Broker;
    touchgfx::TextAreaWithOneWildcard Temperature;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTLOG_SIZE = 1024;
    touchgfx::Unicode::UnicodeChar TextLogBuffer[TEXTLOG_SIZE];
    static const uint16_t LOCALIP_SIZE = 64;
    touchgfx::Unicode::UnicodeChar LocalIpBuffer[LOCALIP_SIZE];
    static const uint16_t BROKER_SIZE = 64;
    touchgfx::Unicode::UnicodeChar BrokerBuffer[BROKER_SIZE];
    static const uint16_t TEMPERATURE_SIZE = 64;
    touchgfx::Unicode::UnicodeChar TemperatureBuffer[TEMPERATURE_SIZE];

private:

    /*
     * Tick Counter Declarations
     */
    static const uint32_t TICK_INTERACTION1_INTERVAL = 10;
    uint32_t frameCountInteraction1Interval;

};

#endif // SCREEN1VIEWBASE_HPP
