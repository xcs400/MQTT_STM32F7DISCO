/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screenkeyboard_screen/ScreenKeyboardViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>


ScreenKeyboardViewBase::ScreenKeyboardViewBase() :
    buttonCallback(this, &ScreenKeyboardViewBase::buttonCallbackHandler)
{

    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    box1.setPosition(0, 0, 480, 272);
    box1.setColor(touchgfx::Color::getColorFromRGB(92, 92, 92));

    buttonWithLabelCancel.setXY(0, 212);
    buttonWithLabelCancel.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID));
    buttonWithLabelCancel.setLabelText(touchgfx::TypedText(T___SINGLEUSE_FJX3));
    buttonWithLabelCancel.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabelCancel.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabelCancel.setAction(buttonCallback);

    buttonWithLabelOk.setXY(419, 212);
    buttonWithLabelOk.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID));
    buttonWithLabelOk.setLabelText(touchgfx::TypedText(T___SINGLEUSE_0YC4));
    buttonWithLabelOk.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabelOk.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabelOk.setAction(buttonCallback);

    shape1.setPosition(0, 0, 80, 80);
    shape1.setOrigin(0.0f, 0.0f);
    shape1.setScale(1.0f, 1.0f);
    shape1.setAngle(0.0f);
    shape1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    shape1.setPainter(shape1Painter);
    const touchgfx::AbstractShape::ShapePoint<float> shape1Points[4] = { { 40.0f, 0.0f }, { 80.0f, 40.0f }, { 40.0f, 80.0f }, { 0.0f, 40.0f } };
    shape1.setShape(shape1Points);

    add(__background);
    add(box1);
    add(buttonWithLabelCancel);
    add(buttonWithLabelOk);
    add(shape1);
}

void ScreenKeyboardViewBase::setupScreen()
{

}

void ScreenKeyboardViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabelCancel)
    {
        //ButtonCancel
        //When buttonWithLabelCancel clicked change screen to Screen1
        //Go to Screen1 with no screen transition
        application().gotoScreen1ScreenNoTransition();
    }
    else if (&src == &buttonWithLabelOk)
    {
        //ButtonOk
        //When buttonWithLabelOk clicked call virtual function
        //Call getBuffer
        getBuffer();

        //ChangeToScreenSettings
        //When ButtonOk completed change screen to ScreenSettings
        //Go to ScreenSettings with no screen transition
        application().gotoScreenSettingsScreenNoTransition();
    }
}
